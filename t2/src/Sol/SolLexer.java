// Generated from C:/Users/sergi/Documents/Compiladores/CompiladoresT/t2/Sol.g4 by ANTLR 4.13.1
package Sol;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SolLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, SL_COMMENT=2, ML_COMMENT=3, LPARENTHESIS=4, RPARENTHESIS=5, NOT=6, 
		TRUE=7, FALSE=8, LT=9, MT=10, LTE=11, MTE=12, EQUAL=13, NEQUAL=14, AND=15, 
		OR=16, MULT=17, DIV=18, MOD=19, ADD=20, SUB=21, PRINT=22, LABEL=23, STRING=24, 
		INT=25, DOUBLE=26, WS=27;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "SL_COMMENT", "ML_COMMENT", "LPARENTHESIS", "RPARENTHESIS", "NOT", 
			"TRUE", "FALSE", "LT", "MT", "LTE", "MTE", "EQUAL", "NEQUAL", "AND", 
			"OR", "MULT", "DIV", "MOD", "ADD", "SUB", "PRINT", "LABEL", "STRING", 
			"INT", "DOUBLE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "';'", null, null, "'('", "')'", "'not'", "'true'", "'false'", 
			"'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'and'", "'or'", "'*'", 
			"'/'", "'%'", "'+'", "'-'", "'print'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "SL_COMMENT", "ML_COMMENT", "LPARENTHESIS", "RPARENTHESIS", 
			"NOT", "TRUE", "FALSE", "LT", "MT", "LTE", "MTE", "EQUAL", "NEQUAL", 
			"AND", "OR", "MULT", "DIV", "MOD", "ADD", "SUB", "PRINT", "LABEL", "STRING", 
			"INT", "DOUBLE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SolLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Sol.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00b7\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0005\u0001>\b\u0001\n\u0001\f\u0001A\t\u0001\u0001\u0001\u0003\u0001"+
		"D\b\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0005\u0002L\b\u0002\n\u0002\f\u0002O\t\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001"+
		"\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001"+
		"\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001"+
		"\u0015\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0004\u0016\u0091"+
		"\b\u0016\u000b\u0016\f\u0016\u0092\u0001\u0016\u0005\u0016\u0096\b\u0016"+
		"\n\u0016\f\u0016\u0099\t\u0016\u0001\u0017\u0001\u0017\u0005\u0017\u009d"+
		"\b\u0017\n\u0017\f\u0017\u00a0\t\u0017\u0001\u0017\u0001\u0017\u0001\u0018"+
		"\u0004\u0018\u00a5\b\u0018\u000b\u0018\f\u0018\u00a6\u0001\u0019\u0001"+
		"\u0019\u0001\u0019\u0005\u0019\u00ac\b\u0019\n\u0019\f\u0019\u00af\t\u0019"+
		"\u0001\u001a\u0004\u001a\u00b2\b\u001a\u000b\u001a\f\u001a\u00b3\u0001"+
		"\u001a\u0001\u001a\u0003?M\u009e\u0000\u001b\u0001\u0001\u0003\u0002\u0005"+
		"\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n"+
		"\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"\u0001\u0000\u0005\u0001\u0001\n\n\u0003\u0000AZ__az\u0004\u000009AZ_"+
		"_az\u0001\u000009\u0003\u0000\t\n\r\r  \u00be\u0000\u0001\u0001\u0000"+
		"\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000"+
		"\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000"+
		"\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000"+
		"\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000"+
		"\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000"+
		"\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000"+
		"\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000"+
		"\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000"+
		"#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001"+
		"\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000"+
		"\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u0000"+
		"1\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001"+
		"\u0000\u0000\u0000\u00017\u0001\u0000\u0000\u0000\u00039\u0001\u0000\u0000"+
		"\u0000\u0005G\u0001\u0000\u0000\u0000\u0007U\u0001\u0000\u0000\u0000\t"+
		"W\u0001\u0000\u0000\u0000\u000bY\u0001\u0000\u0000\u0000\r]\u0001\u0000"+
		"\u0000\u0000\u000fb\u0001\u0000\u0000\u0000\u0011h\u0001\u0000\u0000\u0000"+
		"\u0013j\u0001\u0000\u0000\u0000\u0015l\u0001\u0000\u0000\u0000\u0017o"+
		"\u0001\u0000\u0000\u0000\u0019r\u0001\u0000\u0000\u0000\u001bu\u0001\u0000"+
		"\u0000\u0000\u001dx\u0001\u0000\u0000\u0000\u001f|\u0001\u0000\u0000\u0000"+
		"!\u007f\u0001\u0000\u0000\u0000#\u0081\u0001\u0000\u0000\u0000%\u0083"+
		"\u0001\u0000\u0000\u0000\'\u0085\u0001\u0000\u0000\u0000)\u0087\u0001"+
		"\u0000\u0000\u0000+\u0089\u0001\u0000\u0000\u0000-\u0090\u0001\u0000\u0000"+
		"\u0000/\u009a\u0001\u0000\u0000\u00001\u00a4\u0001\u0000\u0000\u00003"+
		"\u00a8\u0001\u0000\u0000\u00005\u00b1\u0001\u0000\u0000\u000078\u0005"+
		";\u0000\u00008\u0002\u0001\u0000\u0000\u00009:\u0005/\u0000\u0000:;\u0005"+
		"/\u0000\u0000;?\u0001\u0000\u0000\u0000<>\t\u0000\u0000\u0000=<\u0001"+
		"\u0000\u0000\u0000>A\u0001\u0000\u0000\u0000?@\u0001\u0000\u0000\u0000"+
		"?=\u0001\u0000\u0000\u0000@C\u0001\u0000\u0000\u0000A?\u0001\u0000\u0000"+
		"\u0000BD\u0007\u0000\u0000\u0000CB\u0001\u0000\u0000\u0000DE\u0001\u0000"+
		"\u0000\u0000EF\u0006\u0001\u0000\u0000F\u0004\u0001\u0000\u0000\u0000"+
		"GH\u0005/\u0000\u0000HI\u0005*\u0000\u0000IM\u0001\u0000\u0000\u0000J"+
		"L\t\u0000\u0000\u0000KJ\u0001\u0000\u0000\u0000LO\u0001\u0000\u0000\u0000"+
		"MN\u0001\u0000\u0000\u0000MK\u0001\u0000\u0000\u0000NP\u0001\u0000\u0000"+
		"\u0000OM\u0001\u0000\u0000\u0000PQ\u0005*\u0000\u0000QR\u0005/\u0000\u0000"+
		"RS\u0001\u0000\u0000\u0000ST\u0006\u0002\u0000\u0000T\u0006\u0001\u0000"+
		"\u0000\u0000UV\u0005(\u0000\u0000V\b\u0001\u0000\u0000\u0000WX\u0005)"+
		"\u0000\u0000X\n\u0001\u0000\u0000\u0000YZ\u0005n\u0000\u0000Z[\u0005o"+
		"\u0000\u0000[\\\u0005t\u0000\u0000\\\f\u0001\u0000\u0000\u0000]^\u0005"+
		"t\u0000\u0000^_\u0005r\u0000\u0000_`\u0005u\u0000\u0000`a\u0005e\u0000"+
		"\u0000a\u000e\u0001\u0000\u0000\u0000bc\u0005f\u0000\u0000cd\u0005a\u0000"+
		"\u0000de\u0005l\u0000\u0000ef\u0005s\u0000\u0000fg\u0005e\u0000\u0000"+
		"g\u0010\u0001\u0000\u0000\u0000hi\u0005<\u0000\u0000i\u0012\u0001\u0000"+
		"\u0000\u0000jk\u0005>\u0000\u0000k\u0014\u0001\u0000\u0000\u0000lm\u0005"+
		"<\u0000\u0000mn\u0005=\u0000\u0000n\u0016\u0001\u0000\u0000\u0000op\u0005"+
		">\u0000\u0000pq\u0005=\u0000\u0000q\u0018\u0001\u0000\u0000\u0000rs\u0005"+
		"=\u0000\u0000st\u0005=\u0000\u0000t\u001a\u0001\u0000\u0000\u0000uv\u0005"+
		"!\u0000\u0000vw\u0005=\u0000\u0000w\u001c\u0001\u0000\u0000\u0000xy\u0005"+
		"a\u0000\u0000yz\u0005n\u0000\u0000z{\u0005d\u0000\u0000{\u001e\u0001\u0000"+
		"\u0000\u0000|}\u0005o\u0000\u0000}~\u0005r\u0000\u0000~ \u0001\u0000\u0000"+
		"\u0000\u007f\u0080\u0005*\u0000\u0000\u0080\"\u0001\u0000\u0000\u0000"+
		"\u0081\u0082\u0005/\u0000\u0000\u0082$\u0001\u0000\u0000\u0000\u0083\u0084"+
		"\u0005%\u0000\u0000\u0084&\u0001\u0000\u0000\u0000\u0085\u0086\u0005+"+
		"\u0000\u0000\u0086(\u0001\u0000\u0000\u0000\u0087\u0088\u0005-\u0000\u0000"+
		"\u0088*\u0001\u0000\u0000\u0000\u0089\u008a\u0005p\u0000\u0000\u008a\u008b"+
		"\u0005r\u0000\u0000\u008b\u008c\u0005i\u0000\u0000\u008c\u008d\u0005n"+
		"\u0000\u0000\u008d\u008e\u0005t\u0000\u0000\u008e,\u0001\u0000\u0000\u0000"+
		"\u008f\u0091\u0007\u0001\u0000\u0000\u0090\u008f\u0001\u0000\u0000\u0000"+
		"\u0091\u0092\u0001\u0000\u0000\u0000\u0092\u0090\u0001\u0000\u0000\u0000"+
		"\u0092\u0093\u0001\u0000\u0000\u0000\u0093\u0097\u0001\u0000\u0000\u0000"+
		"\u0094\u0096\u0007\u0002\u0000\u0000\u0095\u0094\u0001\u0000\u0000\u0000"+
		"\u0096\u0099\u0001\u0000\u0000\u0000\u0097\u0095\u0001\u0000\u0000\u0000"+
		"\u0097\u0098\u0001\u0000\u0000\u0000\u0098.\u0001\u0000\u0000\u0000\u0099"+
		"\u0097\u0001\u0000\u0000\u0000\u009a\u009e\u0005\"\u0000\u0000\u009b\u009d"+
		"\t\u0000\u0000\u0000\u009c\u009b\u0001\u0000\u0000\u0000\u009d\u00a0\u0001"+
		"\u0000\u0000\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009e\u009c\u0001"+
		"\u0000\u0000\u0000\u009f\u00a1\u0001\u0000\u0000\u0000\u00a0\u009e\u0001"+
		"\u0000\u0000\u0000\u00a1\u00a2\u0005\"\u0000\u0000\u00a20\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a5\u0007\u0003\u0000\u0000\u00a4\u00a3\u0001\u0000"+
		"\u0000\u0000\u00a5\u00a6\u0001\u0000\u0000\u0000\u00a6\u00a4\u0001\u0000"+
		"\u0000\u0000\u00a6\u00a7\u0001\u0000\u0000\u0000\u00a72\u0001\u0000\u0000"+
		"\u0000\u00a8\u00ad\u00031\u0018\u0000\u00a9\u00aa\u0005.\u0000\u0000\u00aa"+
		"\u00ac\u00031\u0018\u0000\u00ab\u00a9\u0001\u0000\u0000\u0000\u00ac\u00af"+
		"\u0001\u0000\u0000\u0000\u00ad\u00ab\u0001\u0000\u0000\u0000\u00ad\u00ae"+
		"\u0001\u0000\u0000\u0000\u00ae4\u0001\u0000\u0000\u0000\u00af\u00ad\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b2\u0007\u0004\u0000\u0000\u00b1\u00b0\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b3\u0001\u0000\u0000\u0000\u00b3\u00b1\u0001"+
		"\u0000\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001"+
		"\u0000\u0000\u0000\u00b5\u00b6\u0006\u001a\u0000\u0000\u00b66\u0001\u0000"+
		"\u0000\u0000\n\u0000?CM\u0092\u0097\u009e\u00a6\u00ad\u00b3\u0001\u0006"+
		"\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}